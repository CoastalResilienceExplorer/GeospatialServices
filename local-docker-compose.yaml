services:
  damage_assessment:
    container_name: damage_assessment_${ENV}
    build:
      context: ./DamageAssessment
    volumes:
      - ./DamageAssessment:/app
      - ${GCP_CREDS}:/root/.config/gcloud
      - ${DATA_FOLDER}:/app/data
    environment:
      OUTPUT_BUCKET_RASTER: ${OUTPUT_BUCKET_RASTER}
      OUTPUT_BUCKET_VECTOR: ${OUTPUT_BUCKET_VECTOR}
      GCS_MNT_BASE: ${GCS_MNT_BASE}
      MNT_BUCKETS: supporting-data2
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    platform: linux/amd64
    entrypoint: python3 app.py

  cogmaker:
    container_name: cogmaker_${ENV}
    build:
      context: ./CogMaker
      args:
        BASE_IMAGE: ${BASE_IMAGE}
    volumes:
      - ./CogMaker:/app
      - ${GCP_CREDS}:/root/.config/gcloud
      - ${DATA_FOLDER}:/app/data
    environment:
      OUTPUT_BUCKET: ${OUTPUT_BUCKET_RASTER}
    platform: linux/amd64
    entrypoint: python3 app.py

  cog2pt:
    container_name: cog2pt_${ENV}
    privileged: true
    build:
      context: ./Cog2Point
      args:
        BASE_IMAGE: ${BASE_IMAGE}
    volumes:
      - ./Cog2Point:/app
      - ${GCP_CREDS}:/root/.config/gcloud
      - ${DATA_FOLDER}:/app/data
    environment:
      MNT_BASE: ${MOUNT_PATH}
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse

  geoparquet2pmtiles:
    container_name: geoparquet2pmtiles_${ENV}
    privileged: true
    build:
      context: ./Geoparquet2Pmtiles
    volumes:
      - ./Geoparquet2Pmtiles:/app
      - ${GCP_CREDS}:/root/.config/gcloud
      - ${DATA_FOLDER}:/app/data
    environment:
      OUTPUT_BUCKET: ${OUTPUT_BUCKET_PMTILES}
  
  express_gateway:
    container_name: express_gateway_${ENV}
    build:
      context: ./ExpressGateway
    volumes:
      - ./ExpressGateway:/app
      # - ${SSL_DIR}:/app/ssl
    environment:
      HOST: ${HOST}
      LOG_LEVEL: debug
    ports:
      - "4000:8080"
    platform: linux/amd64

  trigger:
    container_name: trigger_${ENV}
    build:
      context: ./Trigger
    entrypoint: "python3 app.py"
    # expose:
    #   - "8080"
    volumes:
      - ./Trigger:/app
      - ${DATA_FOLDER}:/app/data
    # ports:
    #   - "3005:8080"
    environment: 
      HOST: ${HOST}
      MOUNT_PATH: ${MOUNT_PATH}
      OUTPUT_BUCKET_PMTILES: ${OUTPUT_BUCKET_PMTILES}

  mosaic:
    container_name: mosaic_${ENV}
    build:
      context: ./Mosaic
    volumes:
      - ./Mosaic:/app
      - ${DATA_FOLDER}:/app/data
    # expose:
    #   - "8080"
    # ports:
    #   - "3006:8080"
    environment: 
      MOUNT_PATH: ${MOUNT_PATH}
    platform: linux/amd64

  # getfeatures:
  #   build:
  #     context: ./GetFeatures
  #     args:
  #       BASE_IMAGE: ${BASE_IMAGE}
  #   volumes:
  #     - ./GetFeatures:/app
  #     - ${GCP_CREDS}:/root/.config/gcloud
  #     # - ${DATA_FOLDER}:/app/data
  #   ports:
  #     - "3007:8080"
  #   environment: 
  #     MNT_BUCKETS: supporting-data2

  # nginx:
  #   build: ./nginx
  #   ports:
  #     - "443:443"
  #   depends_on:
  #     - express_gateway
  #   volumes:
  #     - ${SSL_DIR}:/etc/nginx/certs

  redis:
    container_name: redis_${ENV}
    image: redis/redis-stack:latest
    ports:
      # - 6379:6379
      - 8002:8001
    volumes:
      - $REDIS_DATA:/data
    environment:
      REDIS_ARGS: --save 60 1000 --appendonly yes

  summarystats:
    container_name: summarystats_${ENV}
    build:
      context: ./SummaryStats
    volumes:
      - ./SummaryStats:/app
      - ${DATA_FOLDER}:/app/data
    # expose:
    #   - "8080"
    # ports:
    #   - "3007:8080"
    environment: 
      MOUNT_PATH: ${MOUNT_PATH}
    entrypoint: python3 app.py



